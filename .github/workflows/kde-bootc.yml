name: kde-bootc

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'kde-bootc/**'
  schedule:
    - cron: "0 15 * * *" # 3pm UTC everyday (timed against official fedora container pushes)

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    name: Build 
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
    steps:
      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@v7
        with:
          remove-android: 'true'
      
      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4

      # Build metadata
      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            kde-bootc
          labels: |
            org.opencontainers.image.title=kde-bootc
            org.opencontainers.image.version=${{ matrix.version }}
            org.opencontainers.image.description=${{ env.description }}

      # Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            kde-bootc/Containerfile
          image: kde-bootc

      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}
      
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        if: github.event_name != 'pull_request'
        env:
          REGISTRY_USER: ${{ github.repository_owner }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
  build-iso:
    name: Build ISO
    needs: build 
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@v7
        with:
          remove-android: 'true'
      
      - name: Build iso
        run: |
          sudo podman run \
          --rm \
          -it \
          --privileged \
          --pull=newer \
          --security-opt label=type:unconfined_t \
          -v $(pwd)/config.toml:/config.toml:ro \
          -v $(pwd)/output:/output \
          quay.io/centos-bootc/bootc-image-builder:latest \
          --type anaconda-iso \
          --rootfs btrfs \
          ghcr.io/ryanabx/kde-bootc

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: output/bootiso/